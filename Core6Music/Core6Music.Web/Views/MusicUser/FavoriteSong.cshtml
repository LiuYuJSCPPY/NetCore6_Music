@using Microsoft.AspNetCore.Identity;
@model IEnumerable<Core6Music.Web.Models.FavoriteSong>


@using Core6Music.Web.DateContext.Enum;
@using Microsoft.AspNetCore.Identity;


@inject SignInManager<MusicUser> SignInManager
@inject UserManager<MusicUser> UserManager
@{
    string AbPath = "~/Image/Album/";
    string mp3Path = "/MP3/";
    TimeSpan AlbumTotatl = new TimeSpan();
    foreach(var Totaltime in Model)
    {
        AlbumTotatl += new TimeSpan(Totaltime.Song.SongTime.Ticks);
    }
   
    IdentityUser user = await UserManager.GetUserAsync(User);
}
<div class="container py-4">


    <div class="p-5 mb-4 bg-light rounded-3">
        <div class="container-fluid py-5">
            <h1 class="display-5 fw-bold">喜歡歌曲</h1>
           
           
        
        </div>
    </div>

    <h1 class="display-4">歌曲</h1>
    <p>
       
        @AlbumTotatl.Hours 小時 @AlbumTotatl.Minutes 分鐘 @AlbumTotatl.Seconds 秒
    </p>
    <div class="bd-example">
        <table class="table table-hover">
            <thead>
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">名字</th>
                    <th scope="col"></th>
                    <th scope="col">時間長度</th>
                    <th scope="col"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {

                    <tr>
                        <td>
                            <div class="container bd-example-row text-center">
                                <div class="row">
                                    <div class="text-center col">
                                        <img src="@(AbPath+item.Song.Album.Image)" width="40px" height="40px" asp-append-version="true">

                                    </div>



                                </div>
                            </div>

                        </td>
                        <td>
                            <div class="container bd-example-row text-center">
                                <div class="row">
                                    <div class="text-center col">
                                        <p>@item.Song.Name</p>

                                    </div>



                                </div>
                            </div>

                        </td>
                        <td>
                            <div class="text-center col text-center">
                                <p>@item.Song.ArtistName</p>
                            </div>
                        </td>
                        <td>
                            <div>
                                <audio controls="controls" src="@(mp3Path + item.Song.Mp3NameFile)" preload="none">


                                    Your browser does not support this audio format.
                                </audio>
                            </div>
                        </td>
                        <td>
                            <div>
                                @item.Song.SongTime.Minutes : @item.Song.SongTime.Seconds
                            </div>
                        </td>

                        @if (item != null)
                        {
                            <td>
                                <div>
                                    <button onclick="FavoriteSong('@Url.Action("AddorDeleteFavoriteSong","MusicUser",new{Id = item.SongId})')">取消喜歡</button> FavoriteSong
                                </div>
                            </td>
                        }
                        else
                        {
                            <td>
                                <div>
                                    <button onclick="FavoriteSong('@Url.Action("AddorDeleteFavoriteSong","MusicUser",new{Id = item.SongId})')">喜歡</button> FavoriteSong
                                </div>
                            </td>
                        }
                    </tr>
                }

            </tbody>

        </table>
    </div>



    <script>
        var audios = document.getElementsByTagName("audio");
        // 暂停函数
        function pauseAll() {
            var self = this;
            [].forEach.call(audios, function (i) {
                // 将audios中其他的audio全部暂停
                i !== self && i.pause();
            })
        }
        // 给play事件绑定暂停函数
        [].forEach.call(audios, function (i) {
            i.addEventListener("play", pauseAll.bind(i));
        })

        FavoriteAlbum = (url) =>{
            $.ajax({
                type:"get",
                url : url,
                success: function(res){
                    if(res.success){
                        location.reload();
                    }
                }
            })
        }
        FavoriteSong = (url) => {
            $.ajax({
                type: "get",
                url: url,
                success: function (res) {
                    if (res.success) {
                        location.reload();
                    }
                }
            })
        }
    </script>


